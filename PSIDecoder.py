#!/usr/bin/env python3
import sys
from PIL import Image
import argparse

def decode_psimage(image_path, output_file=None, max_length=None):
    """
    Decode a PNG generated by Invoke-PSImage.
    Args:
        image_path (str): Path to the PNG image.
        output_file (str, optional): File to save decoded payload.
        max_length (int, optional): Maximum number of characters to extract.
    """
    try:
        with Image.open(image_path) as im:
            width, height = im.size
            decoded_chars = []

            for y in range(height):
                for x in range(width):
                    r, g, b = im.getpixel((x, y))[:3]  # ignore alpha if exists
                    decoded_byte = ((b & 0x0F) << 4) | (g & 0x0F)
                    decoded_chars.append(chr(decoded_byte))
                    # Stop if max_length is reached
                    if max_length and len(decoded_chars) >= max_length:
                        break
                if max_length and len(decoded_chars) >= max_length:
                    break

            decoded_str = ''.join(decoded_chars)

            # Generate output filename if not specified
            if not output_file:
                import os
                input_basename = os.path.splitext(image_path)[0]
                output_file = f"{input_basename}.ps1"

            # Write payload to file
            with open(output_file, 'w', encoding='utf-8') as f:
                f.write(decoded_str)
            
            return decoded_str

    except Exception as e:
        print(f"Error decoding image: {e}")
        return None

if __name__ == "__main__":
    parser = argparse.ArgumentParser(description="Decode Invoke-PSImage PNGs")
    parser.add_argument("-i", "--image", required=True, help="Path to PNG image")
    parser.add_argument("-l", "--length", type=int, help="Maximum number of characters to extract")
    args = parser.parse_args()

    decode_psimage(args.image, None, args.length)
